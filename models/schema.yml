version: 2

models:
  - name: trajets_summary
    description: "Résumé des trajets avec le nombre de trajets et le montant total par segment de client et type de véhicule."
    columns:
      - name: nom_segment
        description: "Le segment auquel appartient le client (ex : Particulier, VIP, Entreprise)."
        tests:
          - not_null
      - name: nom_type_vehicule
        description: "Le type de véhicule utilisé pour le trajet (ex : Berline, SUV)."
        tests:
          - not_null
      - name: nombre_trajets
        description: "Le nombre total de trajets effectués pour ce type de véhicule et ce segment de client."
      - name: total_revenus
        description: "Le montant total des revenus générés par les trajets pour ce type de véhicule et ce segment de client."

  - name: revenus_par_segment_et_type
    description: "Modèle qui calcule le nombre total de trajets et le montant total des revenus par segment de client et type de véhicule."
    columns:
      - name: nom_segment
        description: "Le segment de client (Entreprise, VIP, Particulier)."
      - name: nom_type_vehicule
        description: "Le type de véhicule (SUV, Berline)."
      - name: nombre_trajets
        description: "Le nombre de trajets réalisés pour ce type de véhicule et ce segment."
      - name: total_revenus
        description: "Le montant total des revenus générés par ce type de véhicule et ce segment."

sources:
  - name: VTC_Paris
    description: "Les données brutes de l'entreprise VTC Paris."
    tables:
      - name: clients
        description: "Table des clients, contenant les informations démographiques et de segment."
      - name: faits_trajets
        description: "Table des trajets avec les informations sur les trajets effectués, y compris les montants et distances."    
      - name: vehicules
        description: "Table des véhicules avec les informations sur le modèle et le type de véhicule."


  - name: DBT_Paris
    tables:
      - name: produits
      - name: clients
      - name: ventes
      - name: dates
      - name: regions

    models:
      - name: produits
        description: "Table des produits avec la normalisation des catégories de produit."
        columns:
          - name: id_categorie
            description: "Clé étrangère vers la table des catégories de produits."
            tests:
              - relationships:
                  to: ref('categories_produit')
                  field: id_categorie
              - not_null
      - name: clients
        description: "Table des clients avec la normalisation des segments de clients."
        columns:
          - name: id_segment
            description: "Clé étrangère vers la table des segments client."
            tests:
              - relationships:
                  to: ref('segments_client')
                  field: id_segment
              - not_null

    # Ajouter ici d'autres sources et modèles existants pour ton autre dataset.